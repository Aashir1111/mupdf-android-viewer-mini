MuPDF Mini Viewer
=================

This is a minimalist Android app using MuPDF to view PDF, XPS, CBZ,
unprotected EPUB, and FB2 documents.

Prerequisites
-------------

You need a working Android development environment, consisting of the Android
SKD and the Android NDK. The easiest way is to use Android Studio to download
and install the SDK and NDK.

Building
--------

Download the project using Git:

	$ git clone git://git.ghostscript.com/mupdf-android-viewer-mini.git

Edit the local.properties file to point to your Android SDK directory:

	$ echo sdk.dir=$HOME/Android/Sdk > local.properties

If all tools have been installed as per the prerequisites, build the app
using the gradle wrapper:

	$ ./gradlew assembleDebug

Building JNI
------------

The default is to use the binary JNI library from the Ghostscript Maven repository.

If you want to build the JNI code yourself, you will need
to check out the 'jni' submodule recursively. You will also need a working 
host development environment with a C compiler and GNU Make.

Either clone the original project with the --recursive flag, or do it manually:

	mupdf-mini $ git submodule update --init
	mupdf-mini $ cd jni
	mupdf-mini/jni $ git submodule update --init
	mupdf-mini/jni $ cd libmupdf
	mupdf-mini/jni/libmupdf $ git submodule update --init

Then you need to run the 'make generate' step in the libmupdf directory:

	mupdf-mini/jni/libmupdf $ make generate

Running
-------

To run the app in the android emulator, first you'll need to set up an
"Android Virtual Device" for the emulator. Run "android avd" and create
a new device. You can also use Android Studio to set up a virtual device.
Use the x86 ABI for best emulator performance.

Then launch the emulator, or connect a device with USB debugging enabled:

	$ emulator -avd MyVirtualDevice &

Then copy some test files to the device:

	$ adb push file.pdf /mnt/sdcard/Download

Then install the app on the device:

	$ ./gradlew installDebug

To start the installed app on the device:

	$ adb shell am start -n com.artifex.mupdf.mini.app/.LibraryActivity

To see the error and debugging message log:

	$ adb logcat

Release
-------

To release you MUST first change the package name!

Do NOT use the com.artifex domain for your custom app!

In order to sign a release build, you will need to create a key and a key store.

	$ keytool -genkey -v -keystore android.keystore -alias MyKey \
		-validity 3650 -keysize 2048 -keyalg RSA

Then add the following entries to app/gradle.properties:

	release_storeFile=android.keystore
	release_storePassword=<your keystore password>
	release_keyAlias=MyKey
	release_keyPassword=<your key password>

If your keystore has been set up properly, you can now build a release APK.

	$ ./gradlew assembleRelease

Good Luck!
